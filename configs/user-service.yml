spring:
  application:
    name: user-service
  datasource:    
    datasource:
    url: jdbc:postgresql://${POSTGRESQL_HOST:postgresdb}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DATABASE:userdb}
    username: ${POSTGRESQL_USERNAME:postgres}
    password: ${POSTGRESQL_PASSWORD:postgres}
  jpa:
    spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: true
    show-sql: true
    properties.hibernate.format_sql: true
    hibernate.ddl-auto: update
  mvc:
    pathmatch:
       matching-strategy: ant_path_matcher
  config:
    import: "optional:configserver:http://config-service:8088"
  
  data:
    mongodb:
      host: mongodb
      port: 27017
      database: users
      username: root
      password: password
      authentication-database: admin
      
  kafka:
    producer:
      bootstrap-servers: kafka:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      bootstrap-servers: kafka:9092
      group-id: userConsumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    
  h2:
    console:
      enabled: true
      path: /h2-ui
      settings:
        web-allow-others: true
      

server:
  port: 8009
  servlet:
    context-path: /user-service
  
        
logstash:
  service: localhost:5000
  
          
        
eureka:
  client:
    serviceUrl:
      #defaultZone: http://gintaa-app:passw0rd@${EUREKA_HOST:127.0.0.1}:${EUREKA_PORT:8001}/eureka/
      defaultZone: http://${EUREKA_HOST:discovery-service}:${EUREKA_PORT:8001}/eureka/
    register-with-eureka: ${ENABLE_SERVICE_REGISTRATION:true}
    fetchRegistry: true
  instance:
#    lease-renewal-interval-in-seconds: 30
#    lease-expiration-duration-in-seconds: 90
    preferIpAddress: true
#    instanceId: ${HOST_IP:127.0.0.1}
#    ip-address: ${HOST_IP:127.0.0.1}
#    hostname: ${HOST_NAME:user-service}  
    
